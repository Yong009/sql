
--hr 계정 view 생성 권한 부여 (관리자 창에서 해야함 )
GRANT create view to hr;



--시퀀스의 생성

CREATE SEQUENCE dept_deptid_seq
                INCREMENT BY 10
                START WITH 200
                MAXVALUE 9999
                NOCACHE
                NOCYCLE;
                
--최초에 한번일때 currval 경우 데이터가 없고,
--무조건 한번 nextval 한 뒤에 값이 존재한다.
--currval 데이터가 출력이 된다.
--시퀀스 200
INSERT INTO departments(department_id, department_name, location_id)
VALUES(dept_deptid_seq.nextval, 'Support', 2500);

ROLLBACK;

--시퀀스 210

INSERT INTO departments(department_id, department_name, location_id)
VALUES(dept_deptid_seq.nextval, 'Support', 2500);

select *
from departments;
commit;

--게시판 글 넘버 입력

--1) 시퀀스 활용해서 게시판 글 번호 입력
-- 순차적으로 글 번호 입력 가능
--가운데 게시글이 지워 진다라면... 123 67 9 10 - > 1234567 11
--편함
--2) INSERT -> 그룹 합수를 활용해서 입력 
--그룹 함수를 사용하게되면, 알아서 번호를 만들어서 게시판 번호 생성

--시퀀스 수정
ALTER SEQUENCE dept_deptid_seq
                INCREMENT BY 20
                MAXVALUE 999999
                NOCACHE
                NOCYCLE;
                
INSERT INTO departments(department_id, department_name, location_id)
VALUES(dept_deptid_seq.nextval, 'Support', 2500);                

select * from departments;

select dept_deptid_seq.nextval
FROM dual;

ROLLBACK;

SELECT sequence_name, min_value, max_value, increment_by, last_number
FROM user_sequences;

DROP SEQUENCE dept_deptid_seq;

--동의어
SELECT * FROM dept_sum_vu;

CREATE SYNONYM d_sum
FOR dept_sum_vu;

select * from d_sum;
--동의어 관련 데이터 딕셔너리 보기
SELECT synonym_name, table_owner, table_name
FROM user_synonyms;
--동의어 삭제
DROP SyNONYM d_sum;
--실습 정리
DROP table emp;
DROP table bucket;
DROP table store;
DROP table people;
DROP table product;

--ROWNUM
--COLUMN에 순서 매길때 사용
SELECT ROWNUM, employee_id, salary, hire_date, department_id
FROM employees;

--WITH절 --복잡한 SQL 동일한 블록에 반복적으로 나올때 --쿼리문 짧게 쓰고 자주 쓰는 거 치환해서 사용
WITH example AS 
(
    select 'WITH절' AS STR1
    FROm dual
    )
    SELECT *
    FROM example;
    
WITH example AS 
(
    select 'example' FROM DUAL
    UNION ALL
    SELECT 'example3' FROM DUAL
    ),
    
example2 AS
   ( 
        SELECT 'example2' FROM DUAL
        UNION ALL
        select * FROM example
        )
   select *
   FROM example2;
        
WITH example AS 
(
    select employee_id, salary, hire_date
    FROm employees

 SELECT *
    FROM example;

--RANK OVER() : 랭킹
SELECT RANK() over(ORDER BY salary desc) AS 급여순, last_name, salary
FROM employees;

SELECT RANK() OVER(ORDER BY hire_date) AS 입사순, last_name
FROM employees;

--DENSE_RANK() OVER : 공동나와도 바로 다음숫자 출력
SELECT DENSE_RANK() OVER(ORDER BY salary desc) AS 급여순, last_name, salary
FROM employees;

--ROW_number() OVER : 중복 신경안쓰고 번호 부여
SELECT ROW_number() OVER(ORDER BY salary desc) AS 급여순, last_name, salary
FROM employees;

--RANK OVER() -> 그룹 함수 내에서 RANK OVER
SELECT RANK() OVER(PARTITION BY department_id ORDER BY salary) AS 급여순, last_name, salary, department_id
FROM employees;

--휴지통 기능
--UNDOTBS -> 데이터 삭제
--drop table employees -> 자동 커밋 삭제,
--휴지통 이동...

CREATE table temp(
id NUMBER(1));

DROP TABLE temp;

--휴지통 확인
SELECT *
FROM user_recyclebin
WHERE original_name ='TEMP';

show recyclebin;

--휴지통 비우기
PURGE recyclebin;

CREATE table temp(
id NUMBER(1));

drop table temp;

--복구 (object name 찾아서 가져와서)
FLASHBACK table "BIN$CJVbReCGRJiuGhqK0TOVrA==$0" to before drop; 

select * from temp;

--table 영구 삭제
DROP TABLE temp PURGE;

show recyclebin;

SELECT * from temp;
















