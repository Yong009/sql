
CREATE TABLE emp(
emp_id number,
emp_name varchar2(10),
mgr number,
sal number,
dept_id number,
hire_date Date);

DROP TABLE emp;

--1) Insert 문 2가지 형태
-- Insert column 쓰지 않을 경우 - 테이블 모든 Column에 데이터 기입
INSERT INTO emp VALUES(1, '김또치', 100, 24000, 10);

-- Insert column 쓴 경우 - 내가 입력한 column에 대해서만 데이터 기입
INSERT INTO emp (emp_id, emp_name, sal)
VALUES (2, '고희동', 3000);


select *
from emp;

select TO_CHAR(hire_date, 'yyyy/MM/DD hh24:mi:ss')
from emp;

--Insert 할 때 Null 값 기입 하는 방법
DESC emp;
INSERT INTO emp VALUES(1, '김또치', 100, 24000, 10,null);
INSERT INTO emp VALUES(2, '김또치', 100, 24000, 10, sysdate);

--DELETE

select *
from emp;
--where절을 활용하여 선택된 데이터만 삭제
DELETE FROM emp
WHERE emp_id = 2;
--WHERE절 쓰지 않고 테이블에 있는 데이터 전부 삭제
DELETE FROM emp;

--WHERE절에 서브 쿼리를 활용해서 데이터 삭제 하는 방법
DELETE FROM emp
WHERE emp_id = (
                --지워야 할 데이터의 내용 -> SELECT문을 활용
                );

--UPDATE문
select *
FROM emp;

--UPDATE문에서 WHERE 활용하였을때
UPDATE emp
SET emp_name ='도우너'
WHERE emp_id = 1;

--UPDATE문에서 WHERE 사용 안 했을떄
UPDATE emp
SET emp_id = 1000;
                
--UPDATE 깜짝 퀴즈
UPDATE emp
SET dept_id = dept_id+1;

--게시판 테이블

--문제
--게시판 삭제
--게시판 삭제한 내용을 기준으로 번호 재 정렬
--게시판 데이터 입력할 때 값을 부여하는 것이 
--아니라 앞에서 배운 내용을 토대로 게시판 번호를 "생성"해서 데이터 입력할 것.
CREATE TABLE board (
board_no number,
board_content varchar2(200)
);

INSERT INTO board VALUES (1, '1번 게시판');
INSERT INTO board VALUES (2, '2번 게시판');
INSERT INTO board VALUES (3, '3번 게시판');
INSERT INTO board VALUES (4, '4번 게시판');
INSERT INTO board VALUES (5, '5번 게시판');
INSERT INTO board VALUES (6, '6번 게시판');
INSERT INTO board VALUES (7, '7번 게시판');
INSERT INTO board VALUES (8, '8번 게시판');

delete board
where board_no = 4;

UPDATE board
set board_no = board_no-1
where board_no>4;

INSERT INto board VALUES ((select board_no
from board
where board_no = 7)1++, ' ');

select board_no
from board
where board_no = 7;

select *
from board;

